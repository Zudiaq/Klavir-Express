name: Daily Telegram Bot

on:
  workflow_dispatch:  # Allow manual triggering for testing
  # schedule:
  #   - cron: "0 8 * * *"  # Weather update at 8:00 AM
  #   - cron: "0 9 * * *"  # Quote retrieval at 9:00 AM
  #   - cron: "0 10 * * *" # Music recommendation at 10:00 AM

jobs:
  weather-update:
    runs-on: ubuntu-latest
    name: Fetch and Send Weather Update

    environment: Deployment 1
    env:
      CITY: ${{ vars.CITY }}
      REGION: ${{ vars.REGION }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      OPENWEATHERMAP_API_KEY: ${{ secrets.OPENWEATHERMAP_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Weather Update
        run: python send_weather.py

  quote-retrieval:
    runs-on: ubuntu-latest
    name: Fetch and Send Daily Quote

    environment: Deployment 1
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Quote Retrieval
        run: python send_quote.py

  music-recommendation:
    runs-on: ubuntu-latest
    name: Fetch and Send Music Recommendation

    environment: Deployment 1
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
      SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
      LASTFM_API_KEY: ${{ secrets.LASTFM_API_KEY }}
      LASTFM_API_SECRET: ${{ secrets.LASTFM_API_SECRET }}
      OPENWEATHERMAP_API_KEY: ${{ secrets.OPENWEATHERMAP_API_KEY }}
      GH_PAT: ${{ secrets.GH_PAT }}
      YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Pull YAML file
        run: |
          git clone https://$GH_PAT@github.com/Zudiaq/youtube-mp3-apis.git
          cp youtube-mp3-apis/youtube-mp3-api-stats.yaml ./youtube-mp3-api-stats.yaml

      - name: Run Music Recommendation
        run: python send_music.py

      - name: Push updated YAML
        run: |
          cp ./youtube-mp3-api-stats.yaml youtube-mp3-apis/youtube-mp3-api-stats.yaml
          cd youtube-mp3-apis
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add youtube-mp3-api-stats.yaml
          git commit -m "Update API key usage"
          git push https://$GH_PAT@github.com/Zudiaq/youtube-mp3-apis.git
