name: Test MP3 Link

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test-mp3-link:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-4-1 \
            libgraphene-1.0-0 \
            libwoff1 \
            libvpx-dev \
            libevent-2.1-7 \
            libopus0 \
            libgstreamer1.0-0 \
            libgstreamer-plugins-base1.0-0 \
            libgstreamer-gl1.0-0 \
            libgstreamer-plugins-bad1.0-0 \
            libflite1 \
            libavif-dev \
            libharfbuzz-icu0 \
            libsecret-1-0 \
            libhyphen0 \
            libmanette-0.2-0 \
            libgles2-mesa-dev \
            x264

      - name: Install dependencies
        run: |
          npm install playwright

      - name: Test MP3 link
        run: |
          npx playwright install
          node <<EOF
          const { chromium } = require('playwright');

          (async () => {
            const browser = await chromium.launch();
            const context = await browser.newContext({
              userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
            });
            const page = await context.newPage();
            const url = 'https://alpha.123tokyo.xyz/get.php/e/58/41vY5Y0Cgio.mp3?n=MaÌŠneskin%20-%20Back%20To%20Black%20COVER%20(Rooftop%20Sessions)&uT=R&uN=YW1pbm1vaGFtbWFkaTc3NQ%3D%3D&h=OHkSfGvTpAMf9HANT6_6gw&s=1748717977'; // Replace with your MP3 link

            try {
              const response = await page.goto(url);
              if (response && response.status() === 200) {
                console.log('MP3 link is valid.');
              } else {
                console.error(`Failed with status: ${response ? response.status() : 'No response'}`);
                process.exit(1);
              }
            } catch (error) {
              console.error('Error testing MP3 link:', error);
              process.exit(1);
            } finally {
              await browser.close();
            }
          })();
          EOF

