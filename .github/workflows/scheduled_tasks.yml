name: Scheduled Tasks

on:
  schedule:
    - cron: '30 8 * * *'  # 8:30 AM
    - cron: '0 9 * * *'   # 9:00 AM
    - cron: '30 23 * * *' # 11:30 PM
  workflow_dispatch:

jobs:
  morning_tasks:
    if: startsWith(github.event.schedule, '30 8')  # Run only at 8:30 AM
    runs-on: ubuntu-latest
    environment: Deployment 1
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      OPENWEATHERMAP_API_KEY: ${{ secrets.OPENWEATHERMAP_API_KEY }}
      GH_PAT: ${{ secrets.GH_PAT }}
      CITY: ${{ vars.CITY }}
      REGION: ${{ vars.REGION }}
      DEBUG_MODE: ${{ vars.DEBUG_MODE }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Send morning weather update
        run: python send_weather.py
        continue-on-error: true

      - name: Notify admin on failure
        if: failure()
        run: python notify_admin.py "Morning weather update failed."

      - name: Send daily quote
        run: python send_quote.py
        if: success()

  music_and_weather_updates:
    if: startsWith(github.event.schedule, '0 9')  # Run only at 9:00 AM
    runs-on: ubuntu-latest
    environment: Deployment 1
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      OPENWEATHERMAP_API_KEY: ${{ secrets.OPENWEATHERMAP_API_KEY }}
      SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
      SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
      LASTFM_API_KEY: ${{ secrets.LASTFM_API_KEY }}
      LASTFM_API_SECRET: ${{ secrets.LASTFM_API_SECRET }}
      API_SELECTION: ${{ vars.API_SELECTION }}
      GH_PAT: ${{ secrets.GH_PAT }}
      YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
      ADMIN_CHAT_ID: ${{ secrets.ADMIN_CHAT_ID }}
      DEBUG_MODE: ${{ vars.DEBUG_MODE }}
      CITY: ${{ vars.CITY }}
      REGION: ${{ vars.REGION }}
      WEATHER_MESSAGE_ID: ${{ vars.WEATHER_MESSAGE_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Send music recommendation
        run: python send_music.py
        continue-on-error: true

      - name: Notify admin on failure
        if: failure()
        run: python notify_admin.py "Music recommendation failed."

      - name: Update weather message
        run: python update_weather.py update
        continue-on-error: true

      - name: Notify admin on failure
        if: failure()
        run: python notify_admin.py "Weather update failed."

  nightly_quote:
    if: startsWith(github.event.schedule, '30 23')  # Run only at 11:30 PM
    runs-on: ubuntu-latest
    environment: Deployment 1
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      GH_PAT: ${{ secrets.GH_PAT }}
      ADMIN_CHAT_ID: ${{ secrets.ADMIN_CHAT_ID }}
      DEBUG_MODE: ${{ vars.DEBUG_MODE }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Send nightly quote
        run: python send_quote.py --night
        continue-on-error: true

      - name: Notify admin on failure
        if: failure()
        run: python notify_admin.py "Nightly quote failed."
